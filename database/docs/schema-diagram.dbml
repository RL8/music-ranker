// Music Ranker Database Schema Diagram
// Generated on 13 Apr 2025
// Use with dbdiagram.io or similar tools

Table "Albums" {
  "albumId" text [pk]
  "albumTitle" text
  "releaseDate" text
  "albumType" text
  "eraId" text [ref: > "Eras"."eraId"]
}

Table "Artists" {
  "artistId" text
  "artistName" text
}

Table "Eras" {
  "eraId" text
  "eraName" text
  "primaryAlbumId" text [ref: > "Albums"."albumId"]
  "eraStartDate" text
}

Table "Recordings" {
  "recordingId" text [pk]
  "recordingTitle" text
  "songId" text [ref: > "Songs"."songId"]
  "albumId" text [ref: > "Albums"."albumId"]
  "discNumber" bigint
  "trackNumber" bigint
  "versionType" text
  "artistsJson" jsonb
  "notes" text
}

Table "Songs" {
  "songId" text [pk]
  "canonicalTitle" text
  "originalEraId" text [ref: > "Eras"."eraId"]
  "notes" text
}

Table "Editions" {
  "editionId" text [pk]
  "editionName" text
  "description" text
  "created_at" timestamp
}

Table "RecordingEditions" {
  "recordingId" text [ref: > "Recordings"."recordingId"]
  "editionId" text [ref: > "Editions"."editionId"]
  "notes" text
  "created_at" timestamp
  
  indexes {
    ("recordingId", "editionId") [pk]
  }
}

// Note: This diagram shows a circular reference between Albums and Eras
// which is a valid data model but requires careful handling in application code.
